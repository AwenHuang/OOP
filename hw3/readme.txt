1.學號 : 400410048
2.姓名 : 黃韻文
3.email : jokeygeek@gmail.com
4.開發環境: 系上工作站(csie0.cs.ccu.edu.tw)
5.操作說明 : 將程式分成三部分，<hw3.h><hw3.cpp><main.cpp>
------------------------------------------------------
利用isfinite()的回傳值[true,false]去判斷斜率是否無限大(斜率不存在),若在斜率function中用return -1則會出錯,因為斜率有可能是為-1,故用此函式去做斜率的判斷
<makefile>

	輸入make => 編譯.h檔以及編譯兩個.cpp檔生成hw3執行檔
	輸入make clear => 清除hw3執行檔
<hw3.h>
	將四個物件(Line、Line2、Circle、Circle2)建立起來，並分別建立他們的屬性類別(private、public)中的變數以及函式。
	利用friend宣告讓不屬於class的函式可以取用class內private的成員。

<hw3.cpp> 將class內定義的function，其詳細內容打在此檔案。
	
	每個class都有個constructor去設立初始值,EX:Line::Line()
	每個class都有多重載入的函式，方便讀取輸入，和去印出我們想要的輸出型式
	
	＊Line功能函式簡單說明:
		利用多重載子去印出y=ax+b，避免掉(斜率為零、斜率不存在、b=0的情況)，去簡化印出的式子

		1.slope: 
			回傳(y1-y0)/(x1-x0)，得到該線斜率，若斜率不存在則印出"slope does not exit".
		2.y_intercept:
			回傳y0 - (((y1-y0)/(x1-x0))*x0),得到該線的y截距，若y截距為負數則在乘(-1)使他為正數。
			如果斜率不存在則y截距也不存在，回傳-1，印出"y_intercept does not exit"
		3.vshift:
			傳入使用者要shift的變量，然後讓y0和y1加上該變量。

	＊Line2功能函式簡單說明:
		利用多重載子去印出y=ax+b，避免掉(斜率為零、斜率不存在、b=0的情況)，去簡化印出的式子
		因為line2是傳入一個點以及兩個方向向量(dx,dy)故line2的斜率可以用dy/dx來算出

		1.normal:
			因為切線斜率和法線斜率垂直(相乘為-1)，故法線斜率為dx/dy*(-1)，利用isinf()判斷斜率是否存在，然後印出該線

	＊Circle功能函式簡單說明
		利用多重載子去印出(x-cx)^2+(y-cy)^2=r^2，避免掉(cx和cy可能為零的情況和cxcy可能為負數的情況，)，去簡化印出的式子
		※如果使用者輸入半徑為負數或零則回到Circle manu		
		1.radius:
			回傳圓的半徑。
		2.set_center:
			傳入使用者要改變的圓心，然後直接將新的x和y給予class內的cx和cy
		3.is_inside:
			傳入一個點，利用該點和圓心的距離去和圓的半勁做比較，如果距離比半徑大則該點不在圓內，如果距離比半徑小或等於半徑，則該點在圓內，印出yes or no

	＊Circle2功能函式簡單說明
		利用多重載子去印出(x-cx)^2+(y-cy)^2=r^2，避免掉(cx和cy可能為零的情況和cxcy可能為負數的情況，)，去簡化印出的式子

		因為Circle2是輸入兩個在圓上的點(即兩點距離為直徑)，故必須先利用此特性算出半徑和圓心(兩點中點)，再去做和Circle一樣的判斷和輸出

		1.is_inside:
			因為Circle2是輸入兩個在圓上的點(即兩點距離為直徑)，故必須先利用此特性算出半徑和圓心(兩點中點)
			傳入一個點，利用該點和圓心的距離去和圓的半勁做比較，如果距離比半徑大則該點不在圓內，如果距離比半徑小或等於半徑，則該點在圓內，印出yes or no



<main.cpp>

使用者介面以及功能判定都在此檔內做。

根據使用者選擇的類別，再去詢問要使用該類別何種功能，提供back選項，讓使用者可以回到主介面再去選擇其他類別。




	